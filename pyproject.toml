[tool.poetry]
name = "graphene-sqlalchemy"
version = "2.3.0.dev1"
description = "Graphene SQLAlchemy integration"
license = "MIT"
authors = ["Syrus Akbary <me@syrusakbary.com>"]
readme = "README.md"
homepage = "http://docs.graphene-python.org/projects/sqlalchemy/en/latest/"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]
keywords = ["api", "graphql", "protocol", "relay", "graphene"]

packages = [
    { include = "graphene_sqlalchemy", from = "src" },
]

[tool.poetry.urls]
"Source" = "https://github.com/graphql-python/graphene-sqlalchemy"

[tool.poetry.dependencies]
python = "^3.6"
graphene = "^2.1.3"
promise = "^2.3"
Sqlalchemy = "^1.2"
coveralls = { version = "^1.10.0", optional = true }
mock = { version = "^2.0.0", optional = true }
pre-commit = { version = "^1.14.4", optional = true }
pytest = { version = "^4.3.1", optional = true }
pytest-benchmark = { version = "^3.2.1", optional = true }
pytest-cov = { version = "^2.6.1", optional = true }
sqlalchemy_utils = { version = "^0.33.9", optional = true }
tox = { version = "^3.14.5", optional = true }

[tool.poetry.extras]
dev = [
    "coveralls",
    "mock",
    "pre-commit",
    "pytest",
    "pytest-benchmark",
    "pytest-cov",
    "sqlalchemy_utils",
    "tox",
]


[tool.poetry.dev-dependencies]
black = "^19.10b0"
[tool.tox]
legacy_tox_ini = """
[tox]
envlist = pre-commit,py{36,37,38}-sql{11,12,13}
minversion = 3.14.5
isolated_build = True

[testenv]
deps =
    .[dev]
    sql11: sqlalchemy>=1.1,<1.2
    sql12: sqlalchemy>=1.2,<1.3
    sql13: sqlalchemy>=1.3,<1.4
commands =
    pytest --cov=graphene_sqlalchemy {posargs}

[testenv:pre-commit]
basepython=python3.8
commands =
    pre-commit {posargs:run --all-files}
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
